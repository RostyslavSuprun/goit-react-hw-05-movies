{"version":3,"file":"static/js/134.d805828c.chunk.js","mappings":"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","sources":["Api/Api.js","components/Layout/Layout.styles.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'e6a1a90da4d3334608442f3ce7bd3b74';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// приклад список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\nexport async function trendingmoviesRequest() {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${KEY}`, {});\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n// запит повної інформації про фільм для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport async function movieInfoRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}?api_key=${KEY}`, {\n      params: {\n        language: 'en-US',\n      },\n    });\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n// пошук фільму за ключовим словом на сторінці фільмів.\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport async function moviesQueryRequest(search) {\n  try {\n    const response = await axios.get(`search/movie?api_key=${KEY}`, {\n      params: {\n        language: 'en-US',\n        query: search,\n        include_adult: false,\n        page: 1,\n      },\n    });\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n//запит інформації про акторський склад для сторінки кінофільму.\n//https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport async function castRequest(movieId) {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${KEY}`,\n      {\n        params: {\n          language: 'en-US',\n        },\n      }\n    );\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n//запит оглядів для сторінки кінофільму.\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\nexport async function reviewsRequest(movieId) {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${KEY}`,\n      {\n        params: {\n          language: 'en-US',\n          page: 1,\n        },\n      }\n    );\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n","import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 15px;\n`;\n\nexport const Header = styled.header`\n  padding: 15px 30px;\n  display: flex;\n  gap: 20px;\n  box-shadow: 0 0 10px 4px hsl(0deg 0% 38% / 75%);\n`;\n\nexport const NavItem = styled(NavLink)`\n  font-size: 700;\n  /* border: 1px solid black; */\n  display: flex;\n  font-size: 20px;\n  font-weight: 700;\n  text-decoration: none;\n  color: black;\n  &.active {\n    color: #ff4388;\n  }\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    text-decoration: underline;\n  }\n`;\n\nexport const Form = styled.form`\n  /* padding: 25px 0 0 25px; */\n  display: flex;\n  gap: 15px;\n  > input {\n    width: 350px;\n    padding: 7px;\n  }\n`;\n\nexport const Box = styled.div`\n  border-bottom: 1px solid #727272;\n  padding: 15px;\n  p {\n    padding-left: 15px;\n  }\n`;\n\nexport const MoreInfoList = styled.ul`\n  text-decoration: none;\n  list-style: none;\n  margin-top: 15px;\n  padding-left: 20px;\n`;\n\nexport const MoreInfoLink = styled(NavLink)`\n  margin: 0;\n  padding: 5px;\n  display: block;\n  color: black;\n  text-decoration: none;\n  list-style: none;\n  &.active {\n    color: #ff4388;\n  }\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    text-decoration: underline;\n  }\n`;\n\nexport const GoBack = styled(Link)`\n  /* border: 1px solid black; */\n  padding: 3px;\n  display: block;\n  width: 100px;\n  text-align: center;\n  svg {\n    width: 20px;\n    height: 15px;\n  }\n`;\n\nexport const MoviesList = styled.ul`\n  padding: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nimport {\n  Container,\n  Form,\n  MoviesList,\n} from '../components/Layout/Layout.styles';\nimport { moviesQueryRequest } from '../Api/Api';\n\n// сторінка пошуку кінофільмів за ключовим словом.\n\nconst Movies = () => {\n  const [moviesFound, setMoviesFound] = useState([]);\n  const [noResult, setNoResult] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('search');\n  const location = useLocation();\n\n  function handlerQuery(evt) {\n    evt.preventDefault();\n\n    const form = evt.currentTarget;\n    const searchQuery = form.elements.search.value;\n\n    setSearchParams({ search: searchQuery });\n\n    form.reset();\n  }\n\n  useEffect(() => {\n    setNoResult(false);\n    if (!query) {\n      return;\n    }\n    (async function searchMovies() {\n      const res = await moviesQueryRequest(query);\n      const movies = res.data.results;\n      if (movies.length === 0) {\n        // console.log('Not result');\n        setNoResult(true);\n        return;\n      }\n      setMoviesFound(movies);\n    })(query);\n    return () => {\n      // second\n    };\n  }, [query]);\n\n  return (\n    <Container>\n      <Form onSubmit={handlerQuery}>\n        <input\n          name=\"search\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n        ></input>\n        <button type=\"submit\">Search</button>\n      </Form>\n      {query && !noResult && (\n        <MoviesList>\n          {moviesFound.map(({ id, name, title }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }} key={id}>\n                {title} {name}\n              </Link>\n            </li>\n          ))}\n        </MoviesList>\n      )}\n      {noResult && <div>Sorry, there are no results for your query!</div>}\n    </Container>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","trendingmoviesRequest","axios","response","console","log","movieInfoRequest","movieId","params","language","moviesQueryRequest","search","query","include_adult","page","castRequest","reviewsRequest","Container","styled","Header","NavItem","NavLink","Form","Box","MoreInfoList","MoreInfoLink","GoBack","Link","MoviesList","useState","moviesFound","setMoviesFound","noResult","setNoResult","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","res","movies","data","results","length","onSubmit","evt","preventDefault","form","currentTarget","searchQuery","elements","value","reset","name","type","autoComplete","autoFocus","placeholder","map","id","title","to","state","from"],"sourceRoot":""}